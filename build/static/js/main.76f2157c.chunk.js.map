{"version":3,"sources":["components/header/header.component.jsx","redux/reducer/artists.js","components/search-bar/search-bar-component.jsx","components/custom-button/custom-button.component.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.jsx","pages/artists/artists.component.jsx","pages/homepage/homepage.component.jsx","redux/reducer/albums.js","components/album-preview/collection-preview.jsx","pages/artist/artist.component.jsx","App.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["mapStateToProps","createStructuredSelector","connect","className","initialState","loading","artists","errorMessage","reducer","state","action","type","payload","error","SearchBar","props","useState","searchValue","setSearchValue","onSubmit","e","value","placeholder","onChange","target","onClick","preventDefault","search","CustomButton","children","isGoogleSignIn","inverted","otherProps","dispatch","history","useHistory","name","picture_big","nb_fan","release_date","style","backgroundImage","push","CollectionPreview","data","map","id","otherItemProps","Home","useReducer","useEffect","fetch","then","response","json","searchArtist","a","Error","location","pathname","HomePage","albums","playlist","albumReducer","AlbumPreview","Artist","artist","getPlaylist","tracklist","substring","length","artistAlbums","item","index","title","picture","cover","cover_big","nb_album","filter","idx","Math","floor","duration","App","width","exact","path","component","React","Component","combineReducers","middleware","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76f2157c.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport './header.styles.scss';\n\nconst Header = () => (\n    <div className=\"head\"></div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    // currentUser: selectCurrectUser,\n    // hidden: selectCartHidden\n})\n\nexport default connect(mapStateToProps)(Header);\n","export const initialState = {\n    loading: false,\n    artists: [],\n    errorMessage: null\n};\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case \"SEARCH_ARTISTS_REQUEST\":\n            return {\n                ...state,\n                loading: true,\n                errorMessage: null\n            };\n        case \"SEARCH_ARTISTS_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                artists: action.payload\n            };\n        case \"SEARCH_ARTISTS_FAILURE\":\n            return {\n                ...state,\n                loading: false,\n                errorMessage: action.error\n            };\n        default:\n            return state;\n    }\n};\n\n","import React, { useState } from \"react\";\nimport './search-bar-styles.scss';\n\nconst SearchBar = (props) => {\n\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleSearchInputChanges = (e) => {\n        setSearchValue(e.target.value);\n    }\n\n    const resetInputField = () => {\n        setSearchValue(\"\")\n    }\n\n    const callSearchFunction = (e) => {\n        e.preventDefault();\n        props.search(searchValue);\n        resetInputField();\n    }\n    const submitForm = (e) => {\n       // history.push({\n       //      pathname: '/',\n       //      search: '?query=abc',\n       //      state: { detail: 'abc' }\n       //  });\n    }\n\n    return (\n          <form onSubmit={submitForm}>\n              <input\n                  className='search'\n                  value={searchValue}\n                  placeholder={\"Search Artist\"}\n                  onChange={handleSearchInputChanges}\n                  type=\"text\"\n              />\n              <input className='searchButton' onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\n          </form>\n\n    );\n}\n\nexport default SearchBar\n","import React from 'react'\n\nimport './custom-button.styles.scss';\n\nconst CustomButton = ({ children, isGoogleSignIn, inverted,...otherProps }) => (\n    <button className={`${inverted ? 'inverted' : ''} ${isGoogleSignIn ? 'google-sign-in' : ''} custom-button`}\n    {...otherProps}\n    >\n        {children}\n    </button>\n)\n\nexport default CustomButton;","import React from 'react';\n\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\n\n\nimport './collection-item.styles.scss';\n\nconst CollectionItem = (props) => {\n    let history = useHistory();\n    const redirect = () => {\n        history.push('/artist', props)\n    }\n\n    //console.log(\"props\", props)\n\n    const { name, type, picture_big, nb_fan ,release_date} = props;\n    //console.log(props)\n    return (\n        <div className=\"collection-item\">\n            <div\n                className=\"image\"\n                style={{ backgroundImage: `url(${picture_big})` }}\n            />\n            <div className=\"collection-footer row\">\n                <span className=\"name\">{name}</span>\n                <span className=\"fans\">Fans: {nb_fan}</span>\n                {\n                    type === 'album' ? <span className=\"fans\">Released: {release_date}</span> : ''\n                }\n\n            </div>\n            <CustomButton onClick={redirect} inverted> View Artist </CustomButton>\n        </div>\n    )\n}\n\n\n\n\n\nconst mapDispatchToProps = dispatch => ({\n    //addItem: item => dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n","import React from 'react';\n\nimport CollectionItem from '../collection-item/collection-item.component';\n\nimport './collection-preview.styles.scss';\n\nconst CollectionPreview = (props) => (\n    <div className=\"collection-preview\">\n        {/* <h1 className=\"title\">{name}</h1> */}\n\n        <div className=\"preview\">\n            {\n                //console.log(\"Date\", props.data)\n\n                props.data.map(({ id, ...otherItemProps }) => (\n                    <CollectionItem key={id} {...otherItemProps} />\n                ))\n            }\n        </div>\n    </div>\n)\n\n\nexport default CollectionPreview;\n","import React, {useReducer, useEffect } from 'react';\n\nimport { initialState, reducer } from '../../redux/reducer/artists';\nimport { useHistory } from 'react-router-dom';\n\nimport SearchBar from '../../components/search-bar/search-bar-component';\nimport CollectionPreview from '../../components/collection-preview/collection-preview';\n\n\nimport './artists.styles.scss'\n\nconst Home = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    let history = useHistory();\n\n    useEffect(() => {\n        fetch(`/search/artist?q=`)\n            .then(response => response.json())\n            .then(data => {\n                dispatch({\n                    type: \"SEARCH_MOVIES_SUCCESS\",\n                    payload: data.data\n                });\n            });\n    }, []);\n\n    const search = async (searchArtist) => {\n        dispatch({\n            type: \"SEARCH_ARTISTS_REQUEST\"\n        });\n\n        fetch(`/search/artist?q=${searchArtist}`)\n            .then(response => response.json())\n            .then(data => {\n                if (data.data) {\n                    dispatch({\n                        type: \"SEARCH_ARTISTS_SUCCESS\",\n                        payload: data.data\n                    });\n                } else {\n                    dispatch({\n                        type: \"SEARCH_ARTISTS_FAILURE\",\n                        error: data.Error\n                    });\n                }\n                if (history.location.pathname === \"/artist\"){\n                  state.artists = data.data\n                  history.push({\n                       pathname: '/'\n                     });\n                }\n            });\n    };\n\n\n\n    const { artists, errorMessage, loading } = state;\n    return (\n\n\n        loading === true && errorMessage ? <div><text>Loading...</text></div>\n            :\n\n            <div className=\"shop-page\">\n                <>\n                    {/* <h1>Artist List</h1> */}\n                      <SearchBar search={search}/>\n\n                    {\n                        <CollectionPreview data={artists} />\n                    }\n                </>\n\n            </div>)\n\n}\n\nexport default Home;\n","import React from 'react';\nimport Artists from '../artists/artists.component';\nimport './homepage.styles.scss';\n\nconst HomePage = () => (\n    <div className='homepage'>\n        {/* <Directory /> */}\n        <Artists />\n    </div>\n)\n\nexport default HomePage;\n","export const initialState = {\n    loading: false,\n    albums: [],\n    playlist: [],\n    errorMessage: null\n};\n\nexport const albumReducer = (state, action) => {\n    switch (action.type) {\n        case \"SEARCH_ALBUMS_REQUEST\":\n            return {\n                ...state,\n                loading: true,\n                errorMessage: null\n            };\n        case \"SEARCH_ALBUMS_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                albums: action.payload\n            };\n        case \"SEARCH_ALBUMS_FAILURE\":\n            return {\n                ...state,\n                loading: false,\n                errorMessage: action.error\n            };\n        case \"SEARCH_PLAYLIST_REQUEST\":\n            return {\n                ...state,\n                loading: true,\n                errorMessage: null\n            };\n        case \"SEARCH_PLAYLIST_SUCCESS\":\n            return {\n                ...state,\n                loading: false,\n                playlist: action.payload\n            };\n        case \"SEARCH_PLAYLIST_FAILURE\":\n            return {\n                ...state,\n                loading: false,\n                errorMessage: action.error\n            };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\n\nimport CollectionItem from '../collection-item/collection-item.component';\n\nimport './collection-preview.styles.scss';\n\nconst AlbumPreview = (props) => (\n    <div className=\"collection-pr\">\n        {/* <h1 className=\"title\">{name}</h1> */}\n        <div className=\"preview\">\n            {\n                //console.log(\"Date\", props.data)\n\n                props.data.map(({ id, ...otherItemProps }) => (\n                    <CollectionItem key={id} {...otherItemProps} />\n                ))\n            }\n        </div>\n    </div>\n)\n\n\nexport default AlbumPreview;\n","import React, {useReducer, useEffect } from 'react';\n\nimport { initialState, albumReducer } from '../../redux/reducer/albums';\nimport AlbumPreview from '../../components/album-preview/collection-preview';\nimport Artists from '../artists/artists.component';\n\nimport './artist.styles.scss'\n\nconst Artist = (props) => {\n    const [state, dispatch] = useReducer(albumReducer, initialState);\n    const artist = props.location.state;\n\n    useEffect(() => {\n        dispatch({\n            type: \"SEARCH_ALBUMS_REQUEST\"\n        });\n        fetch(`/search/album?q=${artist.name}`)\n            .then(response => response.json())\n            .then(data => {\n                //console.log(data.data)\n                if (data.data) {\n                    dispatch({\n                        type: \"SEARCH_ALBUMS_SUCCESS\",\n                        payload: data.data\n                    });\n                } else {\n                    dispatch({\n                        type: \"SEARCH_ALBUMS_FAILURE\",\n                        error: data.Error\n                    });\n                }\n            });\n\n        getPlaylist();\n\n    }, []);\n\n    const getPlaylist = () => {\n        dispatch({\n            type: \"SEARCH_PLAYLIST_REQUEST\"\n        });\n        fetch(`${artist.tracklist.substring(22, artist.tracklist.length)}`)\n            .then(response => response.json())\n            .then(data => {\n\n                if (data.data) {\n                    dispatch({\n                        type: \"SEARCH_PLAYLIST_SUCCESS\",\n                        payload: data.data\n                    });\n                } else {\n                    dispatch({\n                        type: \"SEARCH_PLAYLIST_FAILURE\",\n                        error: data.Error\n                    });\n                }\n            })\n    }\n\n\n    const { albums, errorMessage, loading, playlist } = state;\n    const artistAlbums = albums.map((item, index) => {\n        const formattedAlbum = {\n            artist: item.artist,\n            name: item.title,\n            picture: item.cover,\n            picture_big: item.cover_big,\n            type: item.type,\n            nb_fan: item.nb_fan,\n            nb_album: item.nb_album\n        }\n        return formattedAlbum\n    })\n\n    return (\n            loading === true && errorMessage ? <div><text>Loading...</text></div> :\n\n            <div>\n                <div className='artists_homepage'><Artists/></div>\n                <div className=\"collection-pr\">\n                    <div className=\"preview\">\n                        <div className=\"artist-item\">\n                            <div\n                                className=\"image\"\n                                style={{ backgroundImage: `url(${artist.picture_big})` }}\n                            />\n                            <div className=\"artist-footer\">\n                                <span className=\"name\">{artist.name}</span>\n                                {typeof artist.nb_fan === 'undefined' ? '' : <span className=\"fans\"> Fans: {artist.nb_fan}</span>}\n                            </div>\n                            <div className=\"artist-playlist\">\n\n                                <div className=\"playlist\">\n                                    <span className=\"playlist\">Top Tracks:</span>\n                                    {\n                                        playlist.filter((item, idx) => idx < 5)\n                                            .map((item, index) => (\n                                                <div key={index} className=\"tracklist row\">\n                                                    <div className=\"tracklist-title\"> {index + 1} : {item.title}</div>\n                                                    <div className=\"duration\" >{Math.floor(item.duration / 60)}:{item.duration - Math.floor(item.duration / 60) * 60}</div>\n                                                </div>\n                                            ))\n                                    }\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <AlbumPreview data={artistAlbums} />\n            </div>\n    )\n}\nexport default Artist;\n","import React from 'react';\nimport { Switch, Route} from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { createStructuredSelector } from 'reselect';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport Artist from './pages/artist/artist.component';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div style={{width: '100%' }}>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage}></Route>\n          <Route path='/artist' component={Artist}></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  // artistsList: setArtistsList\n})\n\nconst mapDispatchToProps = dispatch => ({\n  // setArtistsList: Artists => dispatch(setArtistsList(Artists))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\n\n// import artistsReducer from './artists/artists.reducer';\n// import cartReducer from './cart/cart.reducer';\n\n\nexport default combineReducers({\n    // artists: artistsReducer,\n    // cart: cartReducer,\n})","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nconst middleware = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    ,\n    document.getElementById('container-root'));\n"],"sourceRoot":""}